{"version":3,"sources":["modules/contacts/cmps/ContactMoveList/MoveList.jsx","services/StorageService.js","services/UserService.js","modules/users/actions.js","services/BitcoinService.js","modules/users/pages/HomePage/HomePage.jsx","modules/common/cmps/Header/Header.jsx","services/ContactService.js","modules/contacts/cmps/ContactPreview/ContactPreview.jsx","modules/contacts/cmps/ContactList/ContactsList.jsx","modules/contacts/cmps/ContactFilter/ContactFilter.jsx","modules/contacts/pages/ContactsPage/ContactPage.jsx","modules/contacts/Actions.js","modules/contacts/pages/ContactDetails/ContactDetailsPage.jsx","modules/contacts/pages/ContactEdit/ContactEditPage.jsx","modules/users/pages/RegisterPage/RegisterPage.jsx","App.jsx","serviceWorker.js","modules/contacts/Reducers.js","modules/users/reducers.js","store.js","index.js"],"names":["MoveList","moves","title","showMoveBy","currentRate","className","map","move","time","timeStamp","dateObject","Date","seconds","getSeconds","minutes","getMinutes","hours","getHours","getDate","getMonth","getFullYear","substr","timeConvertor","at","value","Intl","NumberFormat","style","currency","format","amount","key","_id","to","storageService","load","json","localStorage","getItem","JSON","parse","store","stringify","setItem","getUser","addNewUser","newUser","users","length","unshift","login","name","coins","user","find","logout","addMove","contact","currentUser","toId","now","setLoggedInUser","type","setActiveUser","dispatch","a","async","UserService","updateUser","getRate","lastValue","timestamp","Promise","resolve","rate","axios","get","res","newRate","data","getAveragePrice","values","HomePage","state","marketValue","pricesToShow","averagePrice","formatValue","this","props","setState","getMarketValue","getAverageCoinPrice","BitcoinService","valueToDisplay","valuesToShow","y","reduce","acc","cur","textStyle","color","movesToShow","slice","width","height","background","marginBottom","marginTop","stroke","fill","fillOpacity","strokeOpacity","strokeDasharray","Component","mapDispatchToProps","connect","loggedInUser","Header","isMenuOpen","toggleMenu","menuState","logUserOut","history","push","onClick","withRouter","getContacts","filterBy","contacts","reject","contactsToReturn","gContacts","term","toLocaleLowerCase","filter","includes","phone","email","sort","b","getContactById","id","deleteContact","index","findIndex","splice","saveContact","c","_updateContact","txt","possible","i","charAt","Math","floor","random","_makeId","_addContact","getEmptyContact","ContactPreview","src","alt","ContactFilter","handleFilter","onChange","ev","target","placeholder","ContactPage","selectedContactId","setSelectedContactId","ContactService","contactsToShow","toLowerCase","icon","size","ContactsList","setSelectedContact","loadSelectedContact","updateContact","ContactDetails","contactMoves","amountToTransfer","transfer","setContactTransfers","match","params","getCurrentRate","goBack","setTransferAmount","selectedContact","ContactEdit","preventDefault","removeContact","field","prevState","action","onSubmit","updateContactDetails","editedContact","RegisterPage","register","setUserName","library","add","fab","faPlusCircle","faHome","faAddressBook","faChartBar","faUserPlus","faSignOutAlt","App","exact","path","component","Boolean","window","location","hostname","INITIAL_STATE","rootReducer","combineReducers","idx","createStore","applyMiddleware","thunk","createBrowserHistory","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ea0665f7.chunk.js","sourcesContent":["import React from 'react'\r\nimport './MoveList.scss'\r\n\r\nfunction timeConvertor(timeStamp) {\r\n    let dateObject = new Date(timeStamp)\r\n    let seconds = '0' + dateObject.getSeconds()\r\n    let minutes = '0' + dateObject.getMinutes() + ''\r\n    let hours = dateObject.getHours()\r\n    let day = dateObject.getDate()\r\n    let month = dateObject.getMonth() + 1\r\n    let year = dateObject.getFullYear()\r\n    let time = day + '.' + month + '.' + year + ' | ' + hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\r\n    return time\r\n}\r\n\r\nexport default function MoveList({ moves, title, showMoveBy, currentRate }) {\r\n    return (\r\n        <section className=\"move-list-container\">\r\n            <h1>{title}</h1>\r\n            <ul>\r\n                {moves.map(move => {\r\n                    let time = timeConvertor(move.at)\r\n                    let value = new Intl.NumberFormat('en', { style: 'currency', currency: 'USD' }).format(1 / currentRate * move.amount)\r\n                    return (\r\n                        <li key={move._id} className=\"move-preview flex column\">\r\n                            {showMoveBy && <span>To: {move.to}</span>}\r\n                            <span>Coins: {move.amount} | USD: {value}</span>\r\n                            <span>When: {time}</span>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </section>\r\n\r\n    )\r\n}","'use strict'\r\n\r\nfunction load(key) {\r\n    const json = localStorage.getItem(key);\r\n    const value = JSON.parse(json)\r\n    return value;\r\n}\r\n\r\nfunction store(key, value) {\r\n    const json = JSON.stringify(value);\r\n    localStorage.setItem(key, json)\r\n}\r\n\r\nexport const storageService = {\r\n    load,\r\n    store\r\n}","import { storageService } from '../services/StorageService.js'\r\n\r\n\r\nfunction getUser() {\r\n    let user = storageService.load('loggedUser')\r\n    return user\r\n}\r\n\r\nfunction login(name) {\r\n    let users = storageService.load('users')\r\n    if (!users) users = [{ name: 'muki', coins: 100, moves: [] }]\r\n    const user = users.find(user => user.name === name)\r\n    if (user){\r\n        storageService.store('loggedUser', user)\r\n        return user\r\n    }\r\n}\r\n\r\nfunction logout(){\r\n    storageService.store('loggedUser', null)\r\n}\r\n\r\nfunction addNewUser(newUser) {\r\n    let users = storageService.load('users')\r\n    if (!users || users.length === 0) users = []\r\n    users.unshift(newUser)\r\n    storageService.store('users', users)\r\n    storageService.store('loggedUser', newUser)\r\n}\r\n\r\nfunction addMove(contact, amount){\r\n    let currentUser = storageService.load('loggedUser')\r\n    let move = {toId: contact._id, to: contact.name, at: Date.now(), amount}\r\n    currentUser.moves.unshift(move)\r\n    currentUser.coins -= amount\r\n    storageService.store('loggedUser', currentUser)\r\n    return currentUser\r\n}\r\n\r\nexport default {\r\n    getUser,\r\n    addNewUser,\r\n    login,\r\n    logout,\r\n    addMove\r\n}","import UserService from '../../services/UserService'\r\n\r\nconst setLoggedInUser = (user) => {\r\n    return { type: 'SET_USER', user }\r\n}\r\n\r\nexport const setActiveUser = () => {\r\n    return async (dispatch) => {\r\n        const user = UserService.getUser()\r\n        dispatch(setLoggedInUser(user))\r\n    }\r\n}\r\n\r\nconst updateUser = (user) => {\r\n    return {type: 'UPDATE_USER', user}\r\n}\r\n\r\nexport const addMove = (contact, amountToTransfer) => {\r\n    return async (dispatch) => {\r\n        const user = UserService.addMove(contact, amountToTransfer)\r\n        dispatch(updateUser(user))\r\n    }\r\n}\r\n\r\nconst logout = () => {\r\n    return {type: 'UNSET_USER'}\r\n}\r\n\r\nexport const logUserOut = () => {\r\n    return async (dispatch) => {\r\n        UserService.logout()\r\n        dispatch(logout())\r\n    }\r\n}\r\n\r\n","import axios from 'axios';\r\nimport { storageService } from \"./StorageService\";\r\n\r\n\r\nasync function getRate(){\r\n    const lastValue = storageService.load('coinRate')\r\n    if (lastValue) {\r\n        if (Date.now() - lastValue.timestamp<(1000*60*2)) return Promise.resolve(lastValue.rate)\r\n    }\r\n    const res = await axios.get('https://blockchain.info/tobtc?currency=USD&value=1')\r\n    let newRate = {rate: res.data, timestamp: Date.now()}\r\n    storageService.store('coinRate', newRate)\r\n    return Promise.resolve(newRate.rate)\r\n}\r\n\r\nasync function getAveragePrice() {\r\n    const res = await axios.get('https://api.blockchain.info/charts/market-price?timespan=60days&format=json&cors=true')\r\n    return Promise.resolve(res.data.values)\r\n}\r\n\r\n\r\n\r\nexport default {\r\n    getRate,\r\n    getAveragePrice\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Sparklines, SparklinesLine, SparklinesReferenceLine } from 'react-sparklines';\r\n\r\nimport MoveList from '../../../contacts/cmps/ContactMoveList/MoveList'\r\nimport { connect } from 'react-redux'\r\nimport { setActiveUser } from '../../actions'\r\n\r\nimport BitcoinService from '../../../../services/BitcoinService';\r\nimport './HomePage.scss'\r\n\r\nclass HomePage extends Component {\r\n  state = {\r\n    user: null,\r\n    marketValue: null,\r\n    currentRate: null,\r\n    pricesToShow: null,\r\n    averagePrice: null\r\n  };\r\n  async componentDidMount() {\r\n    await this.props.setActiveUser();\r\n\r\n    if (this.props.user) {\r\n      this.setState({ user: this.props.user });\r\n      this.getMarketValue();\r\n    }\r\n    this.getAverageCoinPrice()\r\n  }\r\n  async getMarketValue() {\r\n    const { coins } = this.props.user\r\n    let rate = await BitcoinService.getRate(coins);\r\n    this.setState({ currentRate: rate })\r\n    let value = 1 / rate * coins\r\n    let valueToDisplay = this.formatValue(value)\r\n    this.setState({ marketValue: valueToDisplay })\r\n  }\r\n\r\n  formatValue = (value) => {\r\n    return new Intl.NumberFormat('en', { style: 'currency', currency: 'USD' }).format(value)\r\n  }\r\n\r\n  async getAverageCoinPrice() {\r\n    let values = await BitcoinService.getAveragePrice()\r\n    let valuesToShow = values.map(value => value.y)\r\n    let averagePrice = this.formatValue(valuesToShow.reduce((acc, cur) => acc += cur) / (valuesToShow.length))\r\n\r\n    this.setState({ pricesToShow: valuesToShow, averagePrice })\r\n  }\r\n\r\n  render() {\r\n    const { marketValue, currentRate, pricesToShow, averagePrice } = this.state;\r\n    const { user } = this.props;\r\n    const textStyle = {\r\n      color: 'black'\r\n    }\r\n    if (user) {\r\n      let movesToShow = user.moves.slice(0, 5)\r\n\r\n      return (\r\n        <section className=\"container2\">\r\n          <div className=\"home-container\">\r\n            <h1 className=\"container\" style={textStyle}>Welcome {user.name},</h1>\r\n            <h3 className=\"container\" style={textStyle}>Current Balance: Coins: {user.coins} | USD: {marketValue}</h3>\r\n          </div>\r\n          <div className=\"container flex column\">\r\n            <span style={{ color: \"#AD8350\" }}>60 Day average prices (USD $) {averagePrice}</span>\r\n            {pricesToShow && <Sparklines data={pricesToShow} width={100} height={30} style={{ background: \"#AFA060\", marginBottom: \"20px\", marginTop: \"10px\" }}>\r\n              <h5>{averagePrice}</h5>\r\n              <SparklinesLine style={{ stroke: \"#764134\", fill: \"#0000009a\", fillOpacity: \".6\" }} />\r\n              <SparklinesReferenceLine type=\"mean\" style={{ stroke: 'black', strokeOpacity: 1, strokeDasharray: '4, 1' }} />\r\n            </Sparklines>}\r\n            {movesToShow && <MoveList moves={movesToShow} title=\"Your last 5 transfers:\" currentRate={currentRate} showMoveBy={true}/>}\r\n          </div>\r\n        </section>\r\n      )\r\n    }\r\n    else return (\r\n      <section className=\"container2\">\r\n        <h1 className=\"disconnected-message\" style={{ color: \"#AD8350\" }}>Not Logged In. Please sign in or register.</h1>\r\n        <h1 style={{ color: \"#AD8350\" }}>60 Day average prices (USD $) {averagePrice}</h1>\r\n        {pricesToShow && <Sparklines data={pricesToShow} width={100} height={30} style={{ background: \"#AFA060\", marginBottom: \"20px\", marginTop: \"10px\" }}>\r\n          <h5>{averagePrice}</h5>\r\n          <SparklinesLine style={{ stroke: \"#764134\", fill: \"#0000009a\", fillOpacity: \".6\" }} />\r\n          <SparklinesReferenceLine type=\"mean\" style={{ stroke: 'black', strokeOpacity: 1, strokeDasharray: '4, 1' }} />\r\n        </Sparklines>}\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user.loggedInUser\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setActiveUser\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HomePage)\r\n","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { logUserOut } from '../../../users/actions'\r\n\r\nimport './Header.scss'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\n\r\nclass Header extends Component {\r\n    state = {\r\n        isMenuOpen: false\r\n    }\r\n    toggleMenu = () => {\r\n        // let menuState = isMenuOpen ? !isMenuOpen : isMenuOpen\r\n        let menuState = this.state.isMenuOpen\r\n        menuState = !menuState\r\n        this.setState({ isMenuOpen: menuState })\r\n    }\r\n\r\n    async signout()  {\r\n        await this.props.logUserOut()\r\n        this.toggleMenu()\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        let { isMenuOpen } = this.state\r\n        return (\r\n            <section className=\"header-container container2 pad20 flex align-center space-between\">\r\n                    <span>Mr. Bitcoin</span>\r\n                    <span className=\"menu-btn\" onClick={() => this.toggleMenu()}>☰</span>\r\n                    {/* <div className={`main-nav ${isMenuOpen ? \"open-menu\" : \"\"} flex align-center`}>\r\n                        <span className=\"exit-btn\" onClick={() => this.toggleMenu()}>Close Menu</span>\r\n                        <Link onClick={() => this.toggleMenu()} to=\"/\"><FontAwesomeIcon icon=\"home\" color=\"black\" size=\"1x\" />Home</Link>\r\n                        <Link onClick={() => this.toggleMenu()} to=\"/contact\"><FontAwesomeIcon icon=\"address-book\" color=\"black\" size=\"1x\" />Contacts</Link>\r\n                        <Link onClick={() => this.toggleMenu()} to=\"/register\"><FontAwesomeIcon icon=\"user-plus\" color=\"black\" size=\"1x\" />Register</Link>\r\n                        <a onClick={() => this.signout()}><FontAwesomeIcon icon=\"sign-out-alt\" color=\"black\" size=\"1x\" />Logout</a>\r\n                    </div> */}\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    logUserOut\r\n}\r\n\r\nexport default withRouter(connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(Header));\r\n","import { storageService } from \"./StorageService\";\n\nexport default {\n  getContacts,\n  getContactById,\n  deleteContact,\n  saveContact,\n  getEmptyContact\n}\n\n\n\nconst gContacts = [\n  {\n    \"_id\": \"5a56640269f443a5d64b32ca\",\n    \"name\": \"Ochoa Hyde\",\n    \"email\": \"ochoahyde@renovize.com\",\n    \"phone\": \"+1 (968) 593-3824\"\n  },\n  {\n    \"_id\": \"5a5664025f6ae9aa24a99fde\", \n    \"name\": \"Hallie Mclean\",\n    \"email\": \"halliemclean@renovize.com\",\n    \"phone\": \"+1 (948) 464-2888\"\n  },\n  {\n    \"_id\": \"5a56640252d6acddd183d319\", \n    \"name\": \"Parsons Norris\",\n    \"email\": \"parsonsnorris@renovize.com\",\n    \"phone\": \"+1 (958) 502-3495\"\n  },\n  {\n    \"_id\": \"5a566402ed1cf349f0b47b4d\", \n    \"name\": \"Rachel Lowe\",\n    \"email\": \"rachellowe@renovize.com\",\n    \"phone\": \"+1 (911) 475-2312\"\n  },\n  {\n    \"_id\": \"5a566402abce24c6bfe4699d\", \n    \"name\": \"Dominique Soto\",\n    \"email\": \"dominiquesoto@renovize.com\",\n    \"phone\": \"+1 (807) 551-3258\"\n  },\n  {\n    \"_id\": \"5a566402a6499c1d4da9220a\", \n    \"name\": \"Shana Pope\",\n    \"email\": \"shanapope@renovize.com\",\n    \"phone\": \"+1 (970) 527-3082\"\n  },\n  {\n    \"_id\": \"5a566402f90ae30e97f990db\", \n    \"name\": \"Faulkner Flores\",\n    \"email\": \"faulknerflores@renovize.com\",\n    \"phone\": \"+1 (952) 501-2678\"\n  },\n  {\n    \"_id\": \"5a5664027bae84ef280ffbdf\", \n    \"name\": \"Holder Bean\",\n    \"email\": \"holderbean@renovize.com\",\n    \"phone\": \"+1 (989) 503-2663\"\n  },\n  {\n    \"_id\": \"5a566402e3b846c5f6aec652\", \n    \"name\": \"Rosanne Shelton\",\n    \"email\": \"rosanneshelton@renovize.com\",\n    \"phone\": \"+1 (968) 454-3851\"\n  },\n  {\n    \"_id\": \"5a56640272c7dcdf59c3d411\", \n    \"name\": \"Pamela Nolan\",\n    \"email\": \"pamelanolan@renovize.com\",\n    \"phone\": \"+1 (986) 545-2166\"\n  },\n  {\n    \"_id\": \"5a5664029a8dd82a6178b15f\", \n    \"name\": \"Roy Cantu\",\n    \"email\": \"roycantu@renovize.com\",\n    \"phone\": \"+1 (929) 571-2295\"\n  },\n  {\n    \"_id\": \"5a5664028c096d08eeb13a8a\", \n    \"name\": \"Ollie Christian\",\n    \"email\": \"olliechristian@renovize.com\",\n    \"phone\": \"+1 (977) 419-3550\"\n  },\n  {\n    \"_id\": \"5a5664026c53582bb9ebe9d1\", \n    \"name\": \"Nguyen Walls\",\n    \"email\": \"nguyenwalls@renovize.com\",\n    \"phone\": \"+1 (963) 471-3181\"\n  },\n  {\n    \"_id\": \"5a56640298ab77236845b82b\",\n \n    \"name\": \"Glenna Santana\",\n    \"email\": \"glennasantana@renovize.com\",\n    \"phone\": \"+1 (860) 467-2376\"\n  },\n  {\n    \"_id\": \"5a56640208fba3e8ecb97305\", \n    \"name\": \"Malone Clark\",\n    \"email\": \"maloneclark@renovize.com\",\n    \"phone\": \"+1 (818) 565-2557\"\n  },\n  {\n    \"_id\": \"5a566402abb3146207bc4ec5\", \n    \"name\": \"Floyd Rutledge\",\n    \"email\": \"floydrutledge@renovize.com\",\n    \"phone\": \"+1 (807) 597-3629\"\n  },\n  {\n    \"_id\": \"5a56640298500fead8cb1ee5\", \n    \"name\": \"Grace James\",\n    \"email\": \"gracejames@renovize.com\",\n    \"phone\": \"+1 (959) 525-2529\"\n  },\n  {\n    \"_id\": \"5a56640243427b8f8445231e\", \n    \"name\": \"Tanner Gates\",\n    \"email\": \"tannergates@renovize.com\",\n    \"phone\": \"+1 (978) 591-2291\"\n  },\n  {\n    \"_id\": \"5a5664025c3abdad6f5e098c\", \n    \"name\": \"Lilly Conner\",\n    \"email\": \"lillyconner@renovize.com\",\n    \"phone\": \"+1 (842) 587-3812\"\n  }\n];\n\nfunction sort(arr) {\n  return arr.sort( (a, b) => {\n    if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\n      return -1;\n    }\n    if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\n      return 1;\n    }\n\n    return 0;\n  })\n}\n\nfunction getContacts (filterBy = null) {\n  let contacts = storageService.load('contacts')\n  return new Promise((resolve, reject) => { \n    if (!contacts || contacts.length===0) var contactsToReturn = gContacts;\n    else contactsToReturn = contacts\n    storageService.store('contacts', contactsToReturn)\n\n    if (filterBy && filterBy.term) {\n      contactsToReturn = filter(filterBy.term)\n    }\n    resolve(sort(contactsToReturn))\n  })\n}\n\nfunction getContactById (id) {\n  let contacts = storageService.load('contacts')\n\n    return new Promise((resolve, reject) => {\n      const contact = contacts.find( contact => contact._id === id)\n      contact ? resolve(contact) : reject(`Contact id ${id} not found!`)\n    })\n}\n\nfunction deleteContact(id) {\n  let contacts = storageService.load('contacts')\n\n  return new Promise((resolve, reject) => { \n    const index = contacts.findIndex( contact => contact._id === id)\n    if (index !== -1) {\n      contacts.splice(index, 1)\n    }\n    storageService.store('contacts', contacts)\n    resolve(contacts)\n  })\n}\n\nfunction _updateContact(contact) {\n  let contacts = storageService.load('contacts')\n\n  return new Promise((resolve, reject) => { \n    const index = contacts.findIndex( c => contact._id === c._id)\n    if (index !== -1) {\n      contacts[index] = contact\n    }\n    storageService.store('contacts', contacts)\n    resolve(contact)\n  })\n}\n\nfunction _addContact(contact) {\n  let contacts = storageService.load('contacts')\n\n  return new Promise((resolve, reject) => { \n    contact._id = _makeId()\n    contacts.unshift(contact)\n    storageService.store('contacts', contacts)\n    resolve(contact)\n  })\n}\n\nfunction saveContact(contact) {\n  return contact._id ? _updateContact(contact) : _addContact(contact)\n}\n\nfunction getEmptyContact() {\n  return {\n    name: '',\n    email: '',\n    phone: ''\n  }\n}\n\nfunction filter (term) {\n  term = term.toLocaleLowerCase()\n  return gContacts.filter( contact => {\n    return contact.name.toLocaleLowerCase().includes(term) ||\n           contact.phone.toLocaleLowerCase().includes(term) ||\n           contact.email.toLocaleLowerCase().includes(term)\n  })\n}\n\n\n\nfunction _makeId(length = 10) {\n  var txt = ''\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n  for (var i = 0; i < length; i++) {\n    txt += possible.charAt(Math.floor(Math.random() * possible.length))\n  }\n  return txt\n}","import React from 'react';\r\nimport './ContactPreview.scss'\r\nexport default function ContactPreview({ contact }) {\r\n  return (\r\n    <li className=\"contact-prev pad20\">\r\n      <img src={`https://robohash.org/${contact._id}.png?set=set3`} alt=\"\" />\r\n      <div className=\"contact-info\">\r\n        <h5>{contact.name}</h5>\r\n        <h5>{contact.phone}</h5>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ContactPreview from '../ContactPreview/ContactPreview'\r\nimport '../ContactList/ContactList.scss'\r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nexport default function (props){\r\n    let {contacts} = props\r\n\r\n    return (\r\n        <ul className=\"contact-list\">\r\n            {contacts.map(contact=>{\r\n                return (\r\n                    <Link to={`/contact/${contact._id}`} key={contact._id}>\r\n                        <ContactPreview contact={contact} />\r\n                    </Link>\r\n                )\r\n            })}\r\n        </ul>\r\n    )\r\n}","import React from 'react';\r\nimport './ContactFilter.scss'\r\nexport default function ContactFilter({ handleFilter }) {\r\n    return (\r\n        <section className=\"filter-container container2\">\r\n            <input type=\"text\" onChange={(ev) => handleFilter(ev.target.value)} placeholder=\"search by keyword\"></input>\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ContactService from \"../../../../services/ContactService\";\r\nimport ContactsList from '../../cmps/ContactList/ContactsList'\r\nimport ContactFilter from \"../../cmps/ContactFilter/ContactFilter\";\r\n\r\nimport './ContactPage.scss'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nclass ContactPage extends Component {\r\n  state = {\r\n    contacts: [],\r\n    selectedContactId: null,\r\n    filter: \"\"\r\n  };\r\n  async componentDidMount() {\r\n    const contacts = await ContactService.getContacts();\r\n    if (contacts) this.setState({ contacts });\r\n  }\r\n  setSelectedContactId = (id = null) => {\r\n    this.setState({ selectedContactId: id });\r\n  };\r\n  handleFilter = value => {\r\n    this.setState({ filter: value });\r\n  };\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    let contactsToShow;\r\n    if (!filter) contactsToShow = contacts;\r\n    else\r\n      contactsToShow = contacts.filter(contact =>\r\n        contact.name.toLowerCase().includes(filter.toLowerCase())\r\n      );\r\n    return (\r\n      <>\r\n        <ContactFilter handleFilter={this.handleFilter} />\r\n        <section className=\"contact-page-container container2\">\r\n\r\n          <Link to={`/contact/edit/`} className=\"add-btn\"><FontAwesomeIcon icon=\"plus-circle\" color=\"white\" size=\"2x\" onClick={this.deleteContact} />\r\n          </Link>\r\n          <ContactsList selectedContactId={this.setSelectedContactId} contacts={contactsToShow} />\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactPage;\r\n","import ContactService from '../../services/ContactService'\r\n\r\nconst setSelectedContact = (contact) => {\r\n    return {type: 'SET_SELECTED_CONTACT', contact}\r\n}\r\n\r\nexport const loadSelectedContact = (id) =>{\r\n    return async (dispatch) => {\r\n        const contact = await ContactService.getContactById(id)\r\n        return dispatch(setSelectedContact(contact))\r\n    }\r\n}\r\n\r\nconst setContacts = (contacts) =>{\r\n    return {type: 'SET_CONTACTS', contacts}\r\n}\r\n\r\nexport const loadContacts = () => {\r\n\r\n    return async (dispatch) => {\r\n        const contacts = await ContactService.getContacts()\r\n        return dispatch(setContacts(contacts))\r\n    }\r\n}\r\n\r\nconst updateContact = (contact) => {\r\n    return {type: 'SAVE_CONTACT', contact}\r\n}\r\n\r\nexport const saveContact = (contact) => {\r\n    return async (dispatch) => {\r\n\r\n       const editedContact = await ContactService.saveContact(contact)\r\n       return dispatch(updateContact(editedContact))\r\n    }\r\n}\r\n\r\nconst deleteContact = (id) => {\r\n    return {type: 'REMOVE_CONTACT', id}\r\n}\r\n\r\nexport const removeContact = (id) => {\r\n    return async (dispatch) => {\r\n        const contacts = await ContactService.deleteContact(id)\r\n        return dispatch(deleteContact(id))\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport MoveList from '../../cmps/ContactMoveList/MoveList'\r\nimport BitcoinService from '../../../../services/BitcoinService';\r\n\r\nimport './ContactDetails.scss'\r\n\r\n\r\nimport { connect } from 'react-redux'\r\nimport { loadSelectedContact } from '../../Actions'\r\nimport { addMove } from '../../../users/actions'\r\nimport { setActiveUser } from '../../../users/actions'\r\n\r\nclass ContactDetails extends Component {\r\n  state = {\r\n    user: null,\r\n    contact: null,\r\n    contactMoves: [],\r\n    amountToTransfer: '',\r\n    currentRate: null\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await this.props.setActiveUser()\r\n    this.setState({ user: this.props.user });\r\n\r\n    const { id } = this.props.match.params;\r\n    if (id) {\r\n      await this.props.loadSelectedContact(id)\r\n      this.setState({ contact: this.props.contact })\r\n      this.setContactTransfers()\r\n      this.getCurrentRate()\r\n    }\r\n  }\r\n  setTransferAmount(ev) {\r\n    const { value } = ev.target\r\n    this.setState({ amountToTransfer: +value })\r\n  }\r\n  transfer = async () => {\r\n    const { amountToTransfer, contact } = this.state\r\n    if (amountToTransfer > 0) await this.props.addMove(contact, amountToTransfer)\r\n    this.setState({ amountToTransfer: 0 })\r\n    this.setContactTransfers()\r\n  }\r\n  setContactTransfers = () => {\r\n    const { user } = this.props\r\n    const { contact } = this.props\r\n\r\n    let contactMoves = user.moves.filter(move => move.toId === contact._id)\r\n    this.setState({ contactMoves })\r\n  }\r\n  async getCurrentRate() {\r\n    const { coins } = this.props.user\r\n    let rate = await BitcoinService.getRate(coins);\r\n    this.setState({ currentRate: rate })\r\n  }\r\n\r\n  render() {\r\n    const { amountToTransfer, contactMoves, currentRate } = this.state;\r\n    const { contact } = this.state\r\n    if (contact) {\r\n      return (\r\n        <section className=\"contact-details-container container2\">\r\n          <div className=\"secondary-nav\">\r\n            <a onClick={()=>this.props.history.goBack()} className=\"flat-btn\">Back</a>\r\n            <Link to={`/contact/edit/${contact._id}`} className=\"flat-btn\">Edit</Link>\r\n          </div>\r\n          <div className=\"container\">\r\n            <li className=\"contact-details\">\r\n              <img\r\n                src={`https://robohash.org/${contact._id}.png?set=set3`}\r\n                alt=\"\"\r\n              />\r\n              <span>{contact.name}</span>\r\n              <span>{contact.phone}</span>\r\n              <span>{contact.email}</span>\r\n            </li>\r\n            <div className=\"transfer-section\">\r\n              <input type=\"text\" placeholder=\"enter amount\" onChange={ev => this.setTransferAmount(ev)} value={amountToTransfer} />\r\n              <button onClick={() => this.transfer()} className=\"form-btn\">Transfer</button>\r\n            </div>\r\n            <MoveList moves={contactMoves} title=\"Transfers History\" currentRate={currentRate}/>\r\n          </div>\r\n        </section>\r\n      );\r\n    } else {\r\n      return <h3>No Contact Found</h3>;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contact: state.contact.selectedContact,\r\n    user: state.user.loggedInUser\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  loadSelectedContact,\r\n  addMove,\r\n  setActiveUser\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ContactDetails)\r\n","import React, { Component } from \"react\";\r\nimport ContactService from \"../../../../services/ContactService\";\r\n\r\nimport { loadSelectedContact } from '../../Actions'\r\nimport {saveContact} from '../../Actions'\r\nimport {removeContact} from '../../Actions'\r\nimport {connect} from 'react-redux'\r\n\r\nimport \"./ContactEdit.scss\"\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass ContactEdit extends Component {\r\n  state = {\r\n    contact: {}\r\n  };\r\n  async componentDidMount() {\r\n    let contact;\r\n    const { id } = this.props.match.params;\r\n    if (id) {\r\n      await this.props.loadSelectedContact(id)\r\n      return this.setState({contact: this.props.contact})\r\n    }\r\n    else contact = await ContactService.getEmptyContact()\r\n    this.setState({contact})\r\n  }\r\n  updateContactDetails(ev, field) {\r\n    const { value } = ev.target;\r\n    this.setState(prevState => {\r\n      return {\r\n        contact: {\r\n          ...prevState.contact,\r\n          [field]: value\r\n        }\r\n      };\r\n    });\r\n  }\r\n  saveContact = async (ev) => {\r\n    ev.preventDefault()\r\n    await this.props.saveContact(this.state.contact)\r\n    this.props.history.push('/contact')\r\n  }\r\n  removeContact = async (ev) => {\r\n    ev.preventDefault()\r\n    const id = this.state.contact._id\r\n    if (id) {\r\n      await this.props.removeContact(id)\r\n    }\r\n    this.props.history.push('/contact')\r\n  }\r\n  render() {\r\n    const { contact } = this.state;\r\n    if (contact) {\r\n      return (\r\n        <section className=\"contact-edit-container\">\r\n          <div className=\"secondary-nav\">\r\n            <a onClick={()=>this.props.history.goBack()} className=\"flat-btn\">Back</a>\r\n            <span onClick={this.removeContact} className=\"flat-btn\">Delete</span>\r\n          </div>\r\n\r\n          <div className=\"contact-edit container\">\r\n            <img src={`https://robohash.org/${contact._id}.png?set=set3`} alt=\"\" />\r\n            <form action=\"\" onSubmit={this.saveContact}>\r\n              <div className=\"field\">\r\n                <label> Name:</label>\r\n                <input type=\"text\" placeholder=\"Contact Name\" value={`${contact.name}`} onChange={ev => this.updateContactDetails(ev, \"name\")} />\r\n              </div>\r\n              <div className=\"field\">\r\n                <label> Phone:</label>\r\n                <input type=\"text\" placeholder=\"Phone Number\" value={`${contact.phone}`} onChange={ev => this.updateContactDetails(ev, \"phone\")} />\r\n              </div>\r\n              <div className=\"field\">\r\n                <label> Email:</label>\r\n                <input type=\"text\" placeholder=\"Email\" value={`${contact.email}`} onChange={ev => this.updateContactDetails(ev, \"email\")} />\r\n              </div>\r\n              <button className=\"form-btn\">Save</button>\r\n            </form>\r\n          </div>\r\n        </section>\r\n      );\r\n    } else {\r\n      return <h3>No Contact Found</h3>;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contact: state.contact.selectedContact\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  loadSelectedContact,\r\n  saveContact,\r\n  removeContact\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ContactEdit)\r\n\r\n","import React, { Component } from \"react\";\r\nimport './RegisterPage.scss'\r\n\r\nimport UserService from \"../../../../services/UserService\";\r\n\r\nclass RegisterPage extends Component {\r\n  state = {\r\n    newUser: { name: '', coins: 100, moves: [] }\r\n  };\r\n  setUserName(ev) {\r\n    const { value } = ev.target\r\n    this.setState(prevState => {\r\n      return {\r\n        newUser: {\r\n          ...prevState.newUser,\r\n          name: value\r\n        }\r\n      }\r\n    })\r\n  }\r\n  register = async () => {\r\n    await UserService.addNewUser(this.state.newUser)\r\n    this.props.history.push('/')\r\n  }\r\n  render() {\r\n    const { newUser } = this.state\r\n    return (\r\n      <section className=\"field container\">\r\n        <input type=\"text\" placeholder=\"Enter Username\" value={newUser.name} onChange={ev => this.setUserName(ev)} />\r\n        <button onClick={this.register}>Register</button>\r\n      </section >\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default RegisterPage;\r\n","import React from 'react';\nimport HomePage from './modules/users/pages/HomePage/HomePage'\nimport Header from './modules/common/cmps/Header/Header'\nimport ContactPage from './modules/contacts/pages/ContactsPage/ContactPage'\nimport ContactDetails from \"./modules/contacts/pages/ContactDetails/ContactDetailsPage\";\nimport ContactEdit from \"./modules/contacts/pages/ContactEdit/ContactEditPage\";\nimport RegisterPage from './modules/users/pages/RegisterPage/RegisterPage'\n\nimport { Route, Switch } from 'react-router-dom'\nimport './App.scss';\nimport {history} from './index'\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { faPlusCircle, faHome, faAddressBook, faChartBar, faUserPlus, faSignOutAlt } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(fab, faPlusCircle, faHome, faAddressBook, faChartBar, faUserPlus, faSignOutAlt)\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      \n      <Switch>\n        <Route exact path=\"/\" component={HomePage}/>\n        <Route exact path=\"/contact\" component={ContactPage}/>\n        <Route exact path=\"/contact/edit/:id?\" component={ContactEdit}/>\n        <Route exact path=\"/contact/:id\" component={ContactDetails}/>\n        <Route exact path=\"/register\" component = {RegisterPage}/>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const INITIAL_STATE = {\r\n    selectedContact: null,\r\n    contacts: [],\r\n}\r\n\r\nexport default function contactReducer(state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case 'SET_SELECTED_CONTACT':\r\n            return {\r\n                ...state,\r\n                selectedContact: action.contact\r\n            }\r\n        case 'SET_CONTACTS':\r\n            return {\r\n                ...state,\r\n                contacts: action.contacts\r\n            }\r\n        case 'SAVE_CONTACT':\r\n            const idx = state.contacts.findIndex(contact => contact._id === action.contact._id)\r\n            return {\r\n                ...state,\r\n                contacts: [\r\n                    ...state.contacts.slice(0, idx),\r\n                    action.contact,\r\n                    ...state.contacts.slice(idx + 1)\r\n                ]\r\n            }\r\n        case 'DELETE_CONTACT':\r\n            const index = state.contacts.findIndex(contact=>contact._id===action._id)\r\n            return {\r\n                ...state,\r\n                contacts:[\r\n                    ...state.contacts.slice(0, index),\r\n                    ...state.contacts.slice(index+1)\r\n                ]\r\n            }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}","const INITIAL_STATE = {\r\n    loggedInUser: null\r\n}\r\n\r\nexport default function userReducer(state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                loggedInUser: action.user\r\n            }\r\n        case 'UPDATE_USER':\r\n            return {\r\n                ...state,\r\n                loggedInUser: action.user\r\n            }\r\n        case 'UNSET_USER':\r\n            return {\r\n                ...state,\r\n                loggedInUser: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport ContactReducer from './modules/contacts/Reducers'\r\nimport UserReducer from './modules/users/reducers'\r\n\r\nconst rootReducer = combineReducers({\r\n    contact: ContactReducer,\r\n    user: UserReducer\r\n})\r\n\r\nconst store  = createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunk)\r\n)\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport { HashRouter as Router } from 'react-router-dom'\nimport { createBrowserHistory } from 'history'\nexport const history = createBrowserHistory()\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router history={history}>\n            <App />\n        </Router>\n    </Provider>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}